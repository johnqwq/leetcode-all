package cn.itdf.test;

import org.apache.commons.lang3.tuple.Pair;

import java.util.*;
import java.util.stream.Collectors;

public class InvoiceManage {
    public static double minMoney;
    public static double minLength;
    public static final Map<Double, List<Double>> map = new TreeMap<>();
    public static final List<Pair<Double, List<Double>>> undoList = new LinkedList<>();

    public static void calc(List<Double> invoices, double min, double max) {
        if (invoices.isEmpty()) {
            return;
        }
//        int minMoney = max;
//        int minLength = invoices.size();
        map.clear();
        undoList.clear();
        minMoney = max;
        minLength = invoices.size();
        // key为总金额，value为发票集合

        for (int i = 0; i < invoices.size(); i++) {
            double amount = invoices.get(i);
            // 查找是否有最小值
            if (amount == min) {
                System.out.printf("最优集合编号：%d，总金额：%f", i, amount);
                return;
            }
            // map中是否有补齐后等于T的值
            // 有最小值，已经有最小值，比较长度；没有最小值，当前为最优
            double diff = min - amount;
            if (map.containsKey(diff)) {
                List<Double> best = map.remove(diff);
                minMoney = min;
                if (!map.containsKey(min) || minLength > best.size() + 1) {
                    best.add(amount);
                    minLength = best.size();
                    map.put(min, best);
                }
            } else {
                // 遍历map，尝试最优组合
                for (Map.Entry<Double, List<Double>> entry : map.entrySet()) {
                    // 如果不超过最大值，则新增组合
                    // 比较长度，更短则替换
                    double sum = entry.getKey() + amount;
                    List<Double> value = entry.getValue();
                    ArrayList<Double> newList = new ArrayList<>(value);
                    newList.add(amount);
                    if (sum < min) {
                        replace(sum, newList);
//                    } else if (sum <= minMoney) {
                    } else if ((sum == minMoney && newList.size() < minLength) || sum < minMoney) {
                        // 如果当前总金额【等于最优金额并且集合长度小于最优长度】或者【小于最优金额】，则替换
                        minMoney = sum;
                        minLength = newList.size();
                        undoList.add(Pair.of(sum, newList));
                    } else {
                        break;
                    }
                }
                if (!undoList.isEmpty()) {
                    undoList.forEach(p -> map.put(p.getLeft(), p.getRight()));
                    undoList.clear();
                }
                List<Double> list = new ArrayList<>();
                list.add(amount);
                map.put(amount, list);
            }
        }
        // 返回最优组合和最小值
        if (map.containsKey(minMoney)) {
            List<Double> best = map.get(minMoney);
            System.out.printf("最优集合编号：%s", best.stream().map(String::valueOf).collect(Collectors.joining(",")));
            System.out.printf("最优总金额：%f", minMoney);
        }
    }

    public void replace(int oldValue, int newValue, List<Integer> oldList, List<Integer> newList) {

    }

    /**
     * 当map中该key没有对应集合，或者集合长度大于当前长度，则可以替换
     * @param key
     * @param list
     */
    public static void replace(double key, List<Double> list) {
        if (!map.containsKey(key) || map.get(key).size()>list.size()) {
            undoList.add(Pair.of(key, list));
        }
    }

    public static void main(String[] args) {
//        test2();
        test3();
    }

    public static void test1() {
        List<Double> invoices = Arrays.asList(68.1, 18.7, 14.7, 75.9, 58.1, 71.8, 12.5, 54.0, 35.6, 70.0, 29.4, 61.1, 56.2, 48.9, 42.8, 77.4, 81.1, 34.5, 23.7, 90.6);
        calc(invoices, 100, 10000);
    }

    public static void test2() {
        List<Double> invoices = Arrays.asList(428.1,918.7,734.7,885.9,328.1,971.8,822.5,774.0,395.6,70.0,659.4,781.1,596.2,228.9,402.8,437.4,81.1,934.5,383.7,990.6,799.5,346.6,52.8,525.8,624.7,424.7,298.7,408.8,349.0,611.5,814.1,440.8,188.7,923.1,22.9,885.6,423.7,313.1,278.5,562.6,491.3,59.0,889.4,196.3,143.3,354.7,387.8,322.4,245.9,955.3,255.7,862.1,748.9,619.9,410.0,30.5,478.8,833.8,860.3,685.5,755.1,61.0,890.5,25.6,626.6,172.8,296.1,520.2,948.3,24.6,206.3,157.6,700.2,421.8,324.7,69.4,247.7,686.3,659.6,522.0,382.3,25.3,523.7,53.3,254.1,665.9,603.3,984.3,899.1,630.2,697.8,863.6,964.6,40.7,964.0,740.3,515.2,934.3,480.5,229.8,152.5,85.1,521.5,695.7,98.7,381.0,461.0,198.5,499.0,333.2,449.8,395.3,229.1,988.2,708.4,709.7,386.7,43.7,687.1,159.4,222.6,450.2,378.1,967.9,836.6,277.0,849.3,998.6,491.9,468.1,665.2,497.5,138.5,981.0,678.7,134.9,892.8,751.8,168.4,400.3,12.4,344.7,471.2,33.2,21.6,573.9,534.0,78.6,665.1,537.6,554.0,385.1,274.4,16.4,520.5,848.3,30.1,49.0,60.2,445.8,196.7,63.1,177.8,615.4,122.2,502.3,14.2,170.8,94.3,126.8,916.6,721.0,733.5,364.0,590.4,876.2,205.7,671.5,867.1,303.9,173.0,511.3,620.0,805.9,402.0,268.3,967.0,108.4,394.7,701.0,226.5,106.2,582.9,592.0,134.8,725.6,229.5,226.6,330.0,195.6);
        calc(invoices, 1000, 10000);
    }

    public static void test3() {
        List<Double> invoices = Arrays.asList(61808.1,13788.7,55184.7,48405.9,12208.1,84131.8,38442.5,52254.0,35045.6,73330.0,59069.4,92851.1,77816.2,71508.9,92472.8,11327.4,95121.1,79144.5,6323.7,8910.6,75049.5,79546.6,89152.8,89625.8,81804.7,42994.7,46828.7,12288.8,7279.0,31301.5,26554.1,40040.8,44738.7,24683.1,47542.9,35535.6,25173.7,25063.1,13148.5,6502.6,84641.3,74309.0,37519.4,14056.3,89243.3,93414.7,97407.8,88432.4,62615.9,82135.3,6195.7,49372.1,3718.9,40219.9,11300.0,15870.5,19288.8,38453.8,88970.3,74935.5,51245.1,20851.0,63260.5,1015.6,79826.6,18982.8,73556.1,79720.2,47478.3,44574.6,5156.3,71437.6,79900.2,44971.8,77544.7,55509.4,9157.7,93746.3,85799.6,87642.0,51862.3,92095.3,41113.7,73313.3,32924.1,66005.9,30303.3,12864.3,51389.1,43200.2,80887.8,92933.6,71254.6,12910.7,17794.0,9650.3,46055.2,94984.3,26220.5,7159.8,40742.5,94135.1,37151.5,71975.7,72368.7,57801.0,12341.0,66528.5,63859.0,96363.2,14309.8,53855.3,36859.1,13858.2,17538.4,58129.7,45926.7,42613.7,75927.1,56589.4,44772.6,86580.2,97398.1,76207.9,63206.6,15127.0,80049.3,69308.6,50981.9,56898.1,6605.2,77717.5,64488.5,41571.0,54138.7,75374.9,74152.8,47281.8,72438.4,60790.3,88122.4,88454.7,11361.2,87153.2,65361.6,78783.9,48054.0,49578.6,95705.1,72807.6,19364.0,64735.1,38884.4,97036.4,29230.5,92918.3,54480.1,4009.0,89160.2,22225.8,81376.7,73323.1,41757.8,79815.4,33782.2,38122.3,27734.2,74420.8,31774.3,92196.8,80116.6,35371.0,28453.5,32044.0,10490.4,56316.2,73465.7,23441.5,92937.1,99303.9,82343.0,55951.3,64970.0,67135.9,72672.0,19078.3,88087.0,80298.4,56824.7,89801.0,17056.5,68416.2,89682.9,79792.0,92204.8,5675.6,65569.5,35866.6,70620.0,24945.6,59662.9,82109.2,4883.1,30757.7,94788.6,83532.0,52539.9,9116.2,71344.7,30029.2,67188.8,92661.1,53910.3,79988.8,90831.8,91375.6,32201.9,8780.7,85615.7,46865.2,68867.5,26218.1,61185.3,96879.5,21041.7,90139.3,64847.0,3899.6,63938.6,44263.2,56252.0,25026.0,55392.2,97702.9,16166.1,98006.0,54242.0,94107.9,38295.4,19146.4,62206.0,32955.1,77118.1,49175.7,13951.6,66060.0,92703.9,27463.7,17153.3,44556.1,15280.4,43668.5,21150.9,65121.5,84171.9,29501.4,68104.0,77866.2,55574.0,97600.0,79928.4,45317.3,47023.5,8644.3,26042.1,62239.0,29057.4,16286.9,45807.0,59633.6,28333.8,76347.2,93154.4,60239.5,62217.4,18123.7,11352.4,55729.3,57160.6,15964.8,99335.2,13742.0,76862.2,54037.1,15611.7,86815.1,66526.5,71868.2,18347.9,35659.2,23012.9,3423.1,9872.1,16085.5,41451.1,62534.3,27105.3,67516.6,75985.9,54986.7,13840.8,97700.8,45552.8,67365.3,56677.4,19828.4,87237.5,67187.4,1010.6,38653.7,66228.6,7446.7,22611.4,53465.8,57025.9,85354.6,85972.3,15672.4,78758.7,76165.7,90337.4,1603.9,11653.1,5814.6,32498.3,73092.8,26551.6,23492.6,43747.7,56741.2,62503.6,11605.1,88910.5,73776.2,59678.9,8469.8,85288.7,27943.0,23240.9,73112.8,71915.9,40686.1,97860.2,52741.8,38834.5,7787.1,98765.3,64824.0,62212.0,49908.1,39440.5,50727.6,82150.9,11146.6,84055.6,97769.5,79058.0,64483.4,19847.7,11426.7,62147.8,60217.5,60499.3,55338.0,81380.8,19263.1,15826.5,83855.8,82288.4,57044.2,92902.3,10316.2,87967.3,57697.2,58925.3,26915.8,98552.7,82049.6,58504.8,89551.3,10973.1,28257.4,89130.6,83374.0,1853.1,87233.2,72267.7,33540.2,23365.4,26348.3,61433.0,49268.6,88418.7,44146.2,49060.4,94342.1,46819.3,30839.8,91895.6,79676.5,96092.2,55004.5,83649.4,4480.6,35899.9,17402.4,39142.0,25204.4,80775.9,3400.7,69712.4,82335.7,69885.3,35777.4,93847.5,96574.0,80808.9,21581.4,83054.5,23833.9,90158.1,93313.1,34705.1,73698.5,78562.9,17420.3,69169.5,80709.2,57837.2,96527.5,61437.7,86126.2,41097.3,59301.7,41975.9,32780.7,3378.0,39220.5,86140.6,56247.4,9354.4,81172.3,82089.4,51392.2,31803.3,22757.4,17861.0,21003.0,11539.5,76991.4,19252.3,71765.0,48090.9,49927.7,68564.5,39067.1,1720.8,57819.8,51273.4,3887.9,19335.4,28472.1,54758.7,46932.6,51001.0,58392.1,7126.7,46930.1,77884.9,51948.8,22392.0,42837.4,7440.1,85814.0,3397.3,73559.6,79946.6,28007.5,78611.0,50687.2,21791.3,62521.4,61995.9,68032.5,46144.6,52992.1,1624.4,70706.3,73143.6,8648.7,82148.8,33822.3,12192.5,90902.6,62921.9,56920.0,38311.4,17873.0,45317.6,38130.0,23805.1,28943.4,52861.9,22566.6,53091.3,9704.5,91054.1,34564.2,93223.9,49769.4,33722.1,91657.4,74070.1,22975.0,91948.5,89208.8,50086.4,38456.0,64621.6,7971.9,68158.2,48631.6,66681.3,9251.6,44332.2,46630.1,89955.5,29927.7,56396.3,81621.7,6075.8,42223.2,40717.9,78387.5,77333.3,48374.0,96762.7,10453.4,19155.2,9392.8,28703.7,71464.7,13996.9,5071.2,15634.6,48100.9,72010.4,43935.6,81631.4,71358.9,87722.3,58244.2,23776.4,28533.9,11173.0,99561.9,97995.3,63336.0,96089.4,67598.5,27572.1,42621.3,17940.1,46732.8,42175.7,12618.4,28626.2,78428.3,43472.1,13135.0,54131.5,51554.0,49449.2,61034.2,24659.1,19189.8,18340.1,3570.7,48791.2,72969.5,31651.6,74645.2,68228.3,56375.5,12476.9,84474.0,68769.4,74809.8,90159.0,66741.7,27388.2,65341.4,92237.0,73718.2,51826.8,14447.6,67152.6,45419.6,4882.5,94576.8,85276.2,17224.3,26725.1,27412.1,54271.3,15370.9,10709.3,21487.0,3893.7,23108.6,57984.1,34449.0,39879.8,10358.5,91940.1,32905.8,26071.8,79539.2,82273.5,76581.5,18968.1,54684.8,60235.6,34561.7,12507.4,70109.9,19057.3,59105.1,77316.1,50846.0,54109.2,1652.4,53421.4,90611.8,71506.3,49413.5,68274.8,7935.0,58304.0,59565.2,8539.0,12466.6,91579.9,18076.0,34379.4,82751.0,45835.1,43566.6,82860.1,36072.2,95106.0,30383.4,65601.3,90016.2,16689.8,34381.7,65509.3,88684.0,36605.3,57621.8,72760.1,16300.6,41218.8,62357.1,69357.7,60024.2,19081.7,81940.7,96828.4,91715.0,13490.7,71722.2,80294.5,52283.5,34724.8,13763.0,30690.4,40056.2,70475.2,1677.5,51811.4,58320.7,40545.3,77870.1,58717.3,38320.1,23419.5,28345.0,71304.5,21922.7,76529.9,97613.8,88839.9,20461.5,6177.5,85094.3,98534.0,42086.0,10353.9,23059.3,75255.1,74631.2,6177.8,89128.1,81110.6,66317.9,65461.5,81718.5,9551.1,22164.8,92831.4,58509.3,95683.6,20695.5,30336.0,28583.6,30390.6,27748.3,75612.8,53720.1,33861.2,28077.9,17756.3,46814.3,14378.7,6653.2,88152.3,94972.3,8282.5,98119.0,34027.7,14480.1,99650.1,98384.7,96780.8,5740.7,85465.9,39241.4,36109.6,70615.2,70136.4,14658.8,27323.7,78180.0,89119.2,61513.8,29239.5,90519.7,62014.4,90307.8,15160.8,43972.7,12106.3,68845.4,93735.2,57701.1,40840.1,47143.8,17727.2,39508.8,50378.0,2374.1,1567.1,19264.1,36831.4,1352.7,94763.6,26933.8,12878.4,61704.4,79323.7,78099.8,75252.3,50539.4,84999.5,83636.2,14763.5,33207.9,26710.7,2142.8,65608.2,85349.5,6085.6,7187.8,15098.9,67007.2,4914.1,74291.5,45160.2,15056.4,5592.0,19928.9,26050.3,38880.4,28930.0,23506.0,80687.9,60388.7,96681.5,79638.5,9719.8,31236.3,68932.5,70645.3,59725.1,11338.0,3333.2,36996.2,30483.2,1645.8,22846.4,13943.8,91924.9,62878.8,79580.9,84341.6,16735.6,64458.7,23397.2,25920.8,23924.4,72463.3,62734.6,19924.3,48660.1,91027.3,57034.4,79040.5,25780.0,59180.6,60215.5,98766.3,57737.8,91419.1,28156.1,63514.0,72631.2,97427.8,36644.4,65653.6,76131.2,58638.3,11141.1,8373.5,28297.1,69379.9,61815.8,68500.4,33780.1,94458.3,34381.6,44378.1,39029.6,24355.6,2108.9,84381.6,99931.7,26757.4,10777.7,88920.3,22566.6,56966.1,77878.4,94492.3,25842.9,47811.1,71318.3,14390.4,58765.0,14176.2,35699.1,29924.7,39451.0,14333.7,15146.4,54167.3,86045.7,64240.3,90718.1,3863.8,63361.7,47746.4,22867.6,68336.6,71813.5,96040.5,7958.5,73910.5,45647.9,2934.1,33576.3,79520.4,46031.9,84494.7,9188.3,77583.6,69221.0,34520.3,72533.0,10564.7,74190.7,18767.2,13380.4,62849.8,68169.1,12042.5,28233.7,84347.2,47114.3,95462.9,74300.4,14981.4,61028.9,77411.8,61289.2,74225.8,38365.0,99608.0,89197.8,50081.7,96032.5,22521.3,21426.9,63713.5,27691.0,26995.2,48817.1,7027.2,17620.9,58797.6,93498.7,50738.8,30714.6,98311.8,38793.3,66601.8,19098.3,14496.6,70629.3,89627.4,38352.1,56507.3,99184.8,80414.6,81300.4,3535.4,25396.3,88276.0,53449.1,11185.9,74433.2,9309.7,90099.9,33211.9,5779.9,84392.5,27778.3,97157.8,70683.0,87205.7,38491.7,55360.2,19692.2,38223.1,62097.2,90322.8,30888.2,49960.5,45311.8,41668.5,79059.3,90734.8,41322.5,90081.6,58487.1,70101.5,28807.6,56648.1,58269.4,36064.1,22050.9,67476.4,30715.8,91384.2,40559.0,36823.7,91882.1,22944.4,55841.1,19521.3,11122.4,59101.1,40953.3,87764.2,60618.2,40121.8,72162.6,57447.0,37557.0,59206.2,39118.5,56342.9,75096.3,62482.2,26955.1,91545.7,60696.4,75508.2,59745.2,69115.4,25357.3,53644.7,69652.9,9278.5,21498.4,89734.9,63215.9,58831.7,43849.6,80760.0,26297.2,38497.2,69517.0,94969.8,47189.3,94160.9,74314.5,83893.4,51014.2,57180.5,3477.5,77925.4,55929.1,2182.7,64718.6,41039.5,15791.6,79904.3,69114.2,35861.0,85235.5,53854.3,76120.3,81701.7,17320.4,61392.9,88422.0,93354.0,47443.7,78488.2,66235.3,57514.0,23900.3,65104.5,6352.6,98260.3,83179.2,15986.5,38772.2,34640.2,24219.2,95359.9,35758.8,87948.1,76748.7,76323.8,41768.4,29900.6,33613.4,35446.7,88956.5,47682.5,38030.6,15846.6,59801.6,29452.7,22594.2,81117.1,35810.7,91408.6,5445.5,32880.5,74205.5,2793.0,40951.3,53171.2,13566.0,83007.5,29498.3,77731.6,32491.2,68541.8,77912.9,24548.8,43169.7,35878.2,10208.3,30809.0,24849.7,68226.9,52578.4,70337.1,97735.9,80162.1,16639.4,3055.5,29549.1,50961.3,91457.4,8128.3,2629.7,71370.9,74358.1,49820.5,92202.5,86000.2,39778.1,61019.2,61037.4,35886.0,73110.7,25728.7,83667.1,83468.0,81834.1,85286.5,31327.5,51902.4,33013.3,66613.0,17644.2,36745.2,18185.6,12522.2,85893.9,16909.9,58749.2,30918.7,89034.3,12036.2,74413.2,18733.5,44185.4,15097.1,22013.4,57606.2,22726.6,42850.1,8267.3,81677.8,68311.5,87988.0,50964.8,35372.2,90682.0,4499.1,39695.6,59535.9,36919.9,13370.2,2444.4,38456.1,84131.2,31571.6,25491.6,42121.4,52093.2,18395.6,2840.1,68796.4,62888.4,96344.0,22183.1,84452.1,96195.5,55852.6,74984.9,22300.6,62596.6,76683.0,28016.6,53408.7,96287.9,74275.7,17552.1,9820.1,50381.4,91940.9,48871.0,88228.5,38618.8,1674.7,34555.8,64801.9,96331.2,93221.2,13090.5,54079.2,73971.9,41054.1,79745.5,51083.0,72245.3,43286.6,77793.7,17232.4,92888.7,6704.8,82826.1,27458.6,40908.7,7535.8,4998.4,48061.5,59629.6,3078.6,3523.3,39284.6,19619.7,46911.4,80269.7,28024.4,43091.8,82140.3,87848.9,72373.4,9793.5,23748.1,39077.4,69649.1,31719.6,82190.4,57315.6,39184.2,96100.6,96008.4,88069.2,97841.7,90975.3,65944.9,23207.5,16818.1,72717.3,47334.1,80305.0,98626.5,32282.1,48661.4,64203.4,20387.6,73724.2,91648.8,18815.2,66886.0,11043.1,13576.0,10091.7,18300.2,66207.1,57483.4,12960.6,71530.9,35538.2,75631.7,47785.2,59193.9,45386.0,33378.4,38057.6,13381.4,19804.1,88550.0,19230.5,57200.2,20918.9,71924.7,54197.3,39445.9,45903.2,40991.0,27791.7,76105.3,81878.4,55047.8,75336.2,40128.1,9956.0,72309.9,48055.6,3761.2,19337.0,2566.9,19080.1,31351.9,65842.2,40821.6,16892.5,23719.2,91774.7,45789.6,85990.1,38826.9,42274.9,2011.6,20011.4,47918.3,24242.1,39973.7,15670.8,3604.7,51667.7,50224.8,83814.2,33332.3,18208.1,84671.5,85501.7,10151.9,2537.5,84105.7,14049.5,59415.0,7071.9,95626.0,66897.6,98513.1,18824.7,21849.0,26338.3,82570.8,61800.8,34786.2,22928.7,94006.8,90332.2,43041.4,86067.1,92411.6,72439.1,24053.8,28285.4,13029.4,22822.6,74422.5,68559.1,55775.4,68097.1,29938.1,25746.7,31553.1,41932.4,7565.2,52922.4,16320.2,23400.2,18855.2,74736.1,37747.4,78779.1,24672.4,51852.9,23233.6,35432.7,54966.6,15685.7,77275.4,45692.9,75182.9,19887.6,92410.6,49073.2,43316.3,68579.7,47342.1,96271.0,10614.3,41866.6,94963.1,62790.6,4801.5,1500.7,76457.0,73399.8,98028.5,4578.8,1068.9,50963.4,40446.0,71349.7,27498.9,49842.3,57771.6,2893.2,77024.9,81655.4,11462.5,80159.7,69061.4,5215.4,39013.1,89782.9,43578.6,71754.3,97332.2,96134.0,14867.1,73795.9,77249.0,29781.4,10317.0,1564.1,48759.4,5009.5,76746.5,54729.8,73668.6,97378.1,26495.0,70550.1,96286.8,5729.0,69483.4,66019.5,66682.4,52446.7,73362.0,60293.0,14606.4,58597.7,84065.4,61095.4,84580.1,4397.5,41114.1,99131.9,9911.3,72387.4,84707.1,40887.7,9831.1,9814.8,29996.3,32310.4,18154.8,93771.9,40462.7,50105.8,54962.0,14490.9,67761.2,12309.4,72528.9,28698.1,88832.5,4544.4,30068.1,68734.0,50933.8,53198.3,88411.1,16296.5,32615.2,72610.2,21185.8,10067.3,26968.8,36357.5,1533.0,50187.3,89968.9,48571.5,98814.8,87865.3,51063.8,47108.7,13645.5,39098.0,95128.0,28792.3,32339.8,20038.5,96972.5,63261.2,9589.7,53411.4,77351.8,50925.4,22991.4,49825.0,8026.2,7621.2,73068.4,42951.9,69863.5,1935.0,70374.9,66709.6,4060.5,34529.0,54825.4,8242.8,29900.9,29867.9,82575.8,98346.0,12483.8,48749.0,52926.5,96410.9,83084.9,60691.6,41779.7,76987.5,50441.2,82800.6,2466.9,25432.3,37240.6,95243.2,92311.1,26073.3,25492.6,76248.6,93724.5,73892.1,8013.0,16967.8,88710.8,35097.3,30518.7,81013.7,92898.1,66113.9,60777.7,77558.1,52159.2,34429.4,23919.1,91567.9,57735.9,31690.3,58486.2,78983.2,20537.7,3046.6,71495.1,29462.9,58271.0,11067.3,36017.4,19860.5,9838.9,26161.7,34823.3,47016.5,17962.8,47868.9,49769.5,31073.1,81691.1,87157.0,35470.7,87153.8,28750.5,81360.0,71398.3,18557.6,4334.0,77817.0,18219.9,43577.6,53872.0,36112.5,98513.6,70422.7,86586.7,25315.4,80706.0,21288.3,64564.6,12690.6,55793.2,55341.5,79475.4,88508.2,42083.6,68396.4,21894.3,34783.1,16217.6,83171.3,24731.7,3564.6,87566.8,81359.4,61913.0,96782.5,77020.0,57614.2,41413.3,9613.3,85956.5,22692.6,33963.4,73868.4,42120.9,53213.1,29450.7,81019.6,43798.6,54893.9,98394.2,97234.8,70617.1,87537.6,64203.0,26173.1,92916.5,9420.2,37750.0,20851.8,46245.2,21288.0,5148.4,48032.1,78407.3,96080.2,31332.7,56352.4,26888.4,15352.4,25968.4,1468.5,8802.7,88762.3,68082.2,12147.1,18163.2,37836.0,1622.1,76365.7,83606.2,33450.2,46500.1,5855.9,20329.1,64838.3,64141.7,63468.7,17986.9,59300.0,61746.2,47829.6,88922.7,52446.2,3478.8,76516.7,52449.4,40218.2,73863.7,5550.5,59337.5,25759.3,33021.6,72758.1,23300.7,93300.4,87509.8,6822.4,97553.8,57009.5,80964.1,96972.1,14186.6,72479.3,5367.7,15414.1,85090.6,44184.9,11826.5,92095.6,88583.1,38769.7,5793.5,12511.8,39820.2,50790.3,41810.5,88184.4,71583.7,10923.3,93136.6,32093.2,99930.3,52491.0,94517.8,44414.0,83938.0,24539.1,20841.2,20790.5,83402.6,19943.7,52938.9,97024.3,10882.5,9341.0,34345.5,61883.7,70123.3,47504.5,39162.4,93521.9,20999.2,62592.8,6403.1,25283.2,95401.6,11833.6,7099.2,4782.6,88328.7,36396.6,33722.7,33548.2,71370.8,24718.5,76655.2,37432.0,35036.3,17037.0,17667.6,56332.8,29259.3,83517.6,87258.7,69434.0,26711.6,62714.0,53543.1,94690.5,18716.5,6878.8,88956.0,12368.8,76899.6,44735.3,21521.9,31379.0,82283.4,10225.2,32441.0,71581.3,24400.4,22457.9,53163.7,90267.5,4358.1,65339.9,83525.4,57363.7,23142.3,11525.4,28952.0,15239.5,61507.1,82233.7,85014.7,8831.0,50840.8,34632.2,59020.6,78582.0,59336.0,47296.6,31708.1,51372.2,43869.6,8827.9,52567.3,37378.7,75241.7,21572.7,18311.7,45715.6,39584.1,9759.4,10817.2,37510.9,21720.2,11516.4,94430.5,2131.3,75454.7,17433.6,25119.6,81953.0,12511.0,90323.0,33158.9,53512.8,14063.8,6375.1,93104.3,46977.4,40085.8,1831.9,39938.8,84877.4,88310.0,66205.7,69361.6,73968.4,7214.2,64191.1,44444.5,29631.6,25590.5,78031.0,16096.6,6332.6,69697.0,20731.2,22383.9,48123.6,27416.6,80734.8,9921.5,44987.3,72596.0,31909.8,18922.1,54064.6,95950.5,58218.9,8866.4,80034.9,94714.8,53588.8,74873.2,25153.5,73917.6,14228.4,31646.9,51713.8,9723.1,64458.6,92630.3,85040.1,97032.7,28040.2,1593.4,45826.4,43972.7,4454.6,19545.0,81498.2,44867.6,33732.5,68846.8,87780.4,44826.3,28793.6,92263.1,42032.0,68771.7,27685.5,75955.2,16079.2,32320.8,35287.0,87034.6,82242.4,36634.5,19334.9,42385.5,28980.0,92672.6,30670.9,54078.8,68286.2,1938.5,15723.4,90726.5,20475.3,25773.3,93243.4,15329.4,22943.6,8051.6,47964.3,83756.4,76878.2,12443.1,1190.3,50978.9,89544.8,66369.1,62609.4,96795.6,61684.6,4829.9,66710.0,31244.9,31322.9,92243.3,53592.4,57387.6,88544.4,53422.0,1810.1,39482.7,31175.7,99607.8,6215.2,48121.0,49104.9,56523.7,52189.2,48652.6,79109.2,63312.0,84293.7,27437.0,53533.3,49367.2,55663.7,48130.9,61893.8,65223.9,48075.5,7115.8,55012.0,23375.2,80186.6,51097.6,97227.7,17194.1,39722.2,16229.1,81516.7,96154.6,40595.2,25711.8,56011.0,52046.4,37240.5,82399.9,17397.1,37236.7,42148.3,12744.1,66602.0,60192.7,1156.4,63516.5,36346.7,53444.2,46385.4,3712.7,39765.9,93219.8,72074.1,84659.4,30884.0,10872.3,7237.9,85979.2,99386.7,61482.0,38904.6,21860.0,79751.8,65483.4,58585.6,21466.6,45349.6,46097.6,35834.0,59555.9,63322.8,40789.9,79737.7,88371.1,16760.7,38947.7,7435.9,63093.5,64495.3,80318.3,93430.1,97047.7,7168.1,37381.2,28774.7,7746.4,60221.7,65025.8,29142.4,26611.8);
        calc(invoices, 100000, 100000000);
    }
}
